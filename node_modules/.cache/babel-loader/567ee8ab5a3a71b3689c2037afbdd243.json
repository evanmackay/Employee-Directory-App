{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/evanmackay/code/homework/Employee-Directory-App/src/Components/EmployeeTable.jsx\";\nimport React from \"react\";\nimport { Card, ListGroup, Image, InputGroup, FormControl } from \"react-bootstrap\";\nimport employees from \"../employees.json\";\n\nclass EmployeeTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: employees,\n      filterText: ''\n    };\n  }\n\n  componentDidMount() {\n    let nextState = [];\n    console.log(this.state.employees);\n    nextState = this.state.employees[0].results.map(emp => {\n      return {\n        firstname: emp.name.first,\n        lastname: emp.name.last,\n        phone: emp.cell,\n        gender: emp.gender,\n        email: emp.email,\n        city: emp.location.city,\n        state: emp.location.state,\n        picture: emp.picture.thumbnail,\n        visible: true\n      };\n    });\n    this.setState({\n      employees: nextState\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          placeholder: \"Search by Last Name\",\n          value: this.state.filterText.toLowerCase(),\n          onChange: event => {\n            let nextEmployees = [...this.state.employees];\n            nextEmployees = nextEmployees.map(emp => {\n              if (event.target.value === \"\") {\n                return { ...emp,\n                  visible: true\n                };\n              } else if (emp.lastname.toLowerCase().includes(event.target.value)) {\n                return { ...emp,\n                  visible: true\n                };\n              } else {\n                return { ...emp,\n                  visible: false\n                };\n              }\n            });\n            this.setState({\n              filterText: event.target.value,\n              employees: nextEmployees\n            });\n            console.log(nextEmployees.map(emp => emp.visible));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), this.state.employees.map(employee => {\n        if (employee.visible) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"employeeCard\",\n              style: {\n                width: \"100%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: employee.picture,\n                  roundedCircle: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: [employee.firstname, \" \", employee.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: [\"Phone: \", employee.phone]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: [\"Email: \", employee.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: [\"Location: \", employee.city, \", \", employee.state]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 18\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EmployeeTable;","map":{"version":3,"sources":["/Users/evanmackay/code/homework/Employee-Directory-App/src/Components/EmployeeTable.jsx"],"names":["React","Card","ListGroup","Image","InputGroup","FormControl","employees","EmployeeTable","Component","state","filterText","componentDidMount","nextState","console","log","results","map","emp","firstname","name","first","lastname","last","phone","cell","gender","email","city","location","picture","thumbnail","visible","setState","render","toLowerCase","event","nextEmployees","target","value","includes","employee","width"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  ListGroup,\n  Image,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport employees from \"../employees.json\";\n\nclass EmployeeTable extends React.Component {\n  state = {\n    employees: employees,\n    filterText: ''\n  };\n\n  componentDidMount() {\n    let nextState = [];\n\n    console.log(this.state.employees);\n    nextState = this.state.employees[0].results.map((emp) => {\n      return {\n        firstname: emp.name.first,\n        lastname: emp.name.last,\n        phone: emp.cell,\n        gender: emp.gender,\n        email: emp.email,\n        city: emp.location.city,\n        state: emp.location.state,\n        picture: emp.picture.thumbnail,\n        visible: true,\n      };\n    });\n    this.setState({ employees: nextState });\n  }\n  render() {\n    return (\n      <div>\n        <InputGroup className=\"mb-3\"\n        >\n          <FormControl\n            placeholder=\"Search by Last Name\"\n            value={this.state.filterText.toLowerCase()}\n            onChange={(event) => {\n                let nextEmployees = [...this.state.employees]\n                nextEmployees= nextEmployees.map((emp) => {\n                if (event.target.value === \"\") {\n                        return{\n                            ...emp, visible: true\n                        }\n                    } else if (emp.lastname.toLowerCase().includes(event.target.value)) {\n                        return {\n                            ...emp, visible: true\n                        }\n                    } else {\n                        return {\n                            ...emp, visible: false\n\n                        }\n                    }\n                })\n                this.setState({filterText: event.target.value, employees: nextEmployees})\n                console.log(nextEmployees.map(emp => (emp.visible)));\n            }}\n          />\n        </InputGroup>\n\n        {this.state.employees.map((employee) => {\n            if (employee.visible) {\n          return <div>\n            <Card className=\"employeeCard\" style={{ width: \"100%\" }}>\n              <Card.Body>\n                <Image src={employee.picture} roundedCircle />\n\n                <Card.Title>\n                  {employee.firstname} {employee.lastname}\n                </Card.Title>\n                  <ListGroup.Item>Phone: {employee.phone}</ListGroup.Item>\n                  <ListGroup.Item>Email: {employee.email}</ListGroup.Item>\n                  <ListGroup.Item>Location: {employee.city}, {employee.state}</ListGroup.Item>\n                <Card.Text>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n\n            } else { return <></>}\n        })}\n      </div>\n    );\n  }\n}\n\nexport default EmployeeTable;\n"]},"metadata":{},"sourceType":"module"}